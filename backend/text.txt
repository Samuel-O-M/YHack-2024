% See the REVTeX 4 README file
% It also requires running BibTeX. The commands are as follows:
%
%  1)  latex Report.tex
%  2)  bibtex Report
%  3)  latex Report.tex
%  4)  latex Report.tex
%
\documentclass[%
 reprint,
%superscriptaddress,
%groupedaddress,
%unsortedaddress,
%runinaddress,
%frontmatterverbose, 
%preprint,
%preprintnumbers,
%nofootinbib,
%nobibnotes,
%bibnotes,
 amsmath,amssymb,
 aps,
%pra,
%prb,
%rmp,
%prstab,
%prstper,
%floatfix,
]{revtex4-2}

\usepackage{graphicx}% Include figure files
\usepackage{physics, amsmath, gensymb, multirow}
\usepackage{dcolumn}% Align table columns on decimal point
\usepackage{bm}% bold math
%\usepackage{hyperref}% add hypertext capabilities
%\usepackage[mathlines]{lineno}% Enable numbering of text and display math
%\linenumbers\relax % Commence numbering lines
\usepackage{url}

%\usepackage[showframe,%Uncomment any one of the following lines to test 
%%scale=0.7, marginratio={1:1, 2:3}, ignoreall,% default settings
%%text={7in,10in},centering,
%%margin=1.5in,
%%total={6.5in,8.75in}, top=1.2in, left=0.9in, includefoot,
%%height=10in,a5paper,hmargin={3cm,0.8in},
%]{geometry}

\begin{document}

\preprint{APS/123-QED}

\title{Comparative Analysis of Quantum Algorithm for \\Portfolio Optimization: A Study of VQE}% Force line breaks with \\
%\thanks{A footnote to the article title}%

\author{Michael Cai, Justin Beltran, Chaipat Tirapongprasert, Hyeon-Tae Hwang, Yoonsuk Choi, Farhaan Siddiqui}

\affiliation{Columbia University}

\date{\today}
\begin{abstract}
This supplementary file complements the slideshow for the NYC Quantum Hackathon and is in no way emanating the knowledge presented in those of a paper. We began by using key papers to define and setup the initial problem and implement our own programs to verify and test against reigning classical models. This supplemental resource explores the strengths and weaknesses of the Variational Quantum Eigensolver (VQE), with a focus on its applicability to real-world financial scenarios \cite{Cerezo2021}. Additionally, it discusses the computational complexity, convergence rates, and potential advantages these quantum algorithms offer over classical methods in optimizing asset allocation and risk management. Case studies are presented to demonstrate the performance of each algorithm on benchmark portfolio optimization problems, highlighting their scalability and efficiency in handling large datasets. The analysis aims to identify the specific conditions under which each algorithm excels, offering insights into their practical implementation within financial institutions.
\end{abstract}

%\keywords{Suggested keywords}%Use showkeys class option if keyword
                              %display desired
\maketitle

%\tableofcontents

\section{\label{sec:level1}Introduction%\protect\\ The line break was forced \lowercase{via} \textbackslash\textbackslash
}
Portfolio optimization, rooted in the principles of Modern Portfolio Theory (MPT) as introduced by Harry Markowitz in 1952 \cite{Markowitz1952}, seeks to maximize expected returns while minimizing risk through the strategic allocation of assets. This process typically involves the use of a covariance matrix to analyze the relationships between various assets, alongside metrics such as the Sharpe ratio to evaluate performance \cite{Sharpe1964}. However, the complexity of these optimization problems often categorizes them as NP-hard, presenting significant challenges in computational feasibility \cite{Boyd2004}. Traditional methods, including Monte Carlo simulations and maximum diversification techniques, struggle to efficiently navigate the vast solution space inherent in large portfolios.

In recent years, advancements in quantum computing have opened new avenues for tackling these complex optimization problems \cite{Moll2018}. Notable contributions from organizations such as IBM and D-Wave have demonstrated the potential of quantum algorithms to outperform classical approaches \cite{Hodson2019}. Quantum algorithms, such as the Variational Quantum Eigensolver (VQE) \cite{Peruzzo2014, McClean2016}, offer unique advantages in optimizing asset allocation and risk management by leveraging quantum superposition and entanglement.

These techniques can leverage entanglement to perform calculations, significantly reducing the time required to identify optimal strategies in dynamic market conditions \cite{Cerezo2021}. As the financial industry continues to embrace these innovations, we can expect a paradigm shift in how investment strategies are developed and executed, ultimately leading to more robust and resilient portfolios. Thus, it makes sense that the motivation behind this challenge lies in understanding the potential of quantum computing to revolutionize traditional financial models and enhance decision-making processes through an analysis of time and space complexity as well as scalability.
\section{Theory}
\subsection{Variational Quantum Algorithm Overview}

To intuitively understand the algorithm, the Variational Quantum Eigensolver is defined based on the 2022 paper written by Jules Tilly \cite{Tilly2022}. We will then introduce the IBM Qiskit implementation through it.

The goal of VQE is to optimize an upper bound for the lowest possible expectation value of an observable with respect to a trial wavefunction. Specifically, by presenting a Hamiltonian $\hat{H}$ and a trial wavefunction $\ket{\psi}$, the ground state energy associated with this Hamiltonian, denoted as $E_0$, is constrained by the inequality 
\[
E_0 \leq \frac{\bra{\psi}\hat{H}\ket{\psi}}{\bra{\psi}\psi\rangle}. 
\tag{1}
\]
Consequently, the primary aim of the Variational Quantum Eigensolver (VQE) is to ascertain a parameterization of $\ket{\psi}$ that minimizes the expectation value of the Hamiltonian. This expectation value serves as an upper limit for the ground state energy and, in an ideal scenario, should be indistinguishable from the true ground state energy to the desired precision level. From a mathematical perspective, our objective is to derive an approximation of the eigenvector $\ket{\psi}$ of the Hermitian operator $\hat{H}$ that corresponds to the lowest eigenvalue, $E_0$. 

To reformulate this minimization endeavor into a task amenable to execution on a quantum computer, it is imperative to begin by defining an ansatz wavefunction that can be formed into a executable circuit on a quantum device through a succession of quantum gates. Since only unitary operations or measurements can be conducted on a quantum computer, this is accomplished by employing parameterized unitary operations. 

Thus, we articulate $\ket{\psi}$ as the result of applying a generic parameterized unitary $U(\theta)$ to an initial state representing $N$ qubits, with $\theta$ representing a set of parameters that assume values within the interval $(-\pi, \pi]$. The qubit register is typically initialized as $\ket{0}^{\otimes N}$ for simplicity, although low-depth operations may be executed for alternative initial states prior to the application of the unitary. Note, we will denote $\ket{0}^{\otimes N}$ as $\ket{0}$ for simplification of the equations. Acknowledging that $\ket{\psi}$ (and similarly any $U(\theta)\ket{\psi}$) must inherently be a normalized wavefunction, we can reformulate the VQE optimization challenge as 
\[
E_{\text{VQE}} = \min_{\theta} \bra{0}U^\dagger(\theta) \hat{H} U(\theta)\ket{0}.
\tag{2}
\]
Equation (2) is commonly referred to as the cost function of the VQE optimization framework, a term derived from the realms of machine learning and optimization literature. 

We can extend this exposition by expressing the Hamiltonian in a form that is directly measurable on a quantum computer, represented as a weighted sum of spin operators. Observables that are conducive to direct measurement on a quantum device are tensor products of spin operators (Pauli operators). We may define these as Pauli strings: 
\[
\hat{P}_a \in \{I, X, Y, Z\}^{\otimes N},
\]
where $N$ signifies the number of qubits utilized to model the wavefunction. The Hamiltonian can be reformulated as 
\[
\hat{H} = \sum_a w_a \hat{P}_a,
\tag{3}
\]
where $w_a$ denotes a set of weights, and $P$ represents the total number of Pauli strings within the Hamiltonian. Consequently, Equation (2) transforms into 
\[
E_{\text{VQE}} = \min_{\theta} \sum_a w_a \bra{0}U^\dagger(\theta) \hat{P}_a U(\theta)\ket{0},
\tag{4}
\]
wherein the hybrid nature of the VQE becomes distinctly evident: each term 
\[
E_{P_a} = \bra{0}U^\dagger(\theta) \hat{P}_a U(\theta)\ket{0}
\]
corresponds to the expectation value of a Pauli string $\hat{P}_a$ and can be computed on a quantum device, while the summation and minimization 
\[
E_{\text{VQE}} = \min_{\theta} \sum_a w_a E_{P_a}
\]
are executed on a classical computer.

\begin{figure*}
\includegraphics[width=16cm]{Pictures/VQE Algorithm.jpg}
\caption{\label{fig:pipeline} The VQE Pipeline — Illustrative formulas do not guarantee best practices. (1) Pre-processing: (a) Hamiltonian representation: Initial step defining basis functions for Hamiltonian as a quantum observable; (b) Encoding: Second step encoding Hamiltonian into measurable operators on a Quantum Computer via qubit wavefunction, mapping fermionic to spin operators; (c) Grouping and measurement strategy: Third step involves grouping operators for simultaneous measurement, necessitating circuit additions for basis rotation and establishing measurement weighting; (d) State initialization: Final pre-processing step determining the state initialization for the ansatz — (2) The VQE loop: (a) Ansatz and trial state preparation: Initial step applying ansatz to initialized qubit register, requiring parameter initialization before the first iteration; (b) Basis rotation and measurement: Prepared trial wave function is rotated into the measurement basis or a diagonal basis of specific Pauli strings; (c) Observable computation: Expectation value computation is determined by the optimization strategy, involving weighted summation on conventional hardware or machine learning techniques; (d) Parameters update: Updates to ansatz parameters are computed based on observables and optimization strategies, initiating a new VQE iteration — (3) Post-processing, Error mitigation: Additional computation layer aims to reduce quantum noise impact on measurement results \cite{Tilly2022}.}
\end{figure*}

\textbf{Hamiltonian construction and representation:} As shown in Figure \ref{fig:pipeline}, the first step in the VQE is defining the system for which we want to find the ground state. In the context of portfolio optimization, this could be a Hamiltonian representing an optimization problem based on Markowitz's mean-variance model, where the objective is to minimize the portfolio risk (variance) while maximizing the return. The Hamiltonian is constructed by mapping the cost function, including the covariance matrix for asset returns and expected returns, into a quantum observable. The choice of representation, such as encoding the asset selection in binary or using fractional shares, significantly impacts both the accuracy and the computational cost of the solution. Additionally, constraints such as budget limits or asset allocation restrictions must be incorporated into the Hamiltonian to ensure feasible portfolio solutions.

\textbf{Encoding of operators:} Since qubit registers can only measure observables in the Pauli basis, the problem's cost function, expressed as a classical function of asset returns, must be encoded into Pauli operators. This process involves translating the classical optimization problem into a quantum optimization problem, affecting the efficiency of the computation. Different encodings, such as binary or unary encoding of asset weights, influence the number of qubits required and the number of Pauli terms generated, impacting the circuit depth and performance.

\textbf{Measurement strategy and grouping:} To efficiently extract the required expectation values of the cost function (e.g., portfolio variance and return), measurements must be organized to minimize the number of repetitions (shots). Techniques such as grouping commuting Pauli strings allow multiple terms in the Hamiltonian to be measured simultaneously, optimizing the measurement process. Further optimization can be achieved by leveraging the structure of the covariance matrix and expected returns, potentially reducing the number of measurements required.

\textbf{Ansatz and state preparation:} The ansatz, a parameterized quantum circuit, is used to generate the trial portfolio allocation. Its expressibility determines how well it can approximate the optimal portfolio, while its trainability impacts how efficiently it can be optimized. A good ansatz balances expressibility and trainability while keeping circuit depth manageable, which is important for noise resilience on near-term devices.
